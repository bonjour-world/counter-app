{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\redomat\\\\react-multi-page-website\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst webSocketServerPort = 8080;\n\nconst webSocketServer = require('websocket').server;\n\nconst http = require('http');\n\nconst server = http.createServer();\nserver.listen(webSocketServerPort);\nconsole.log('listening on port 8080');\nconst wsServer = new webSocketServer({\n  httpServer: server\n});\nconst clients = {};\n\n_s(webSocketServer.on('request', _s(function (request) {\n  _s();\n\n  const [counts, setCounts] = useState([]);\n  useEffect(() => {\n    getCounts();\n  }, []);\n}, \"R6Vj2BzeO9B6F6TB1uw38n6uUNg=\")), \"R6Vj2BzeO9B6F6TB1uw38n6uUNg=\");\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/xampp/htdocs/redomat/react-multi-page-website/src/index.js"],"names":["React","ReactDOM","App","webSocketServerPort","webSocketServer","require","server","http","createServer","listen","console","log","wsServer","httpServer","clients","on","request","counts","setCounts","useState","useEffect","getCounts","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,mBAAmB,GAAG,IAA5B;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAA7C;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,YAAL,EAAf;AACAF,MAAM,CAACG,MAAP,CAAcN,mBAAd;AACAO,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEA,MAAMC,QAAQ,GAAG,IAAIR,eAAJ,CAAoB;AACnCS,EAAAA,UAAU,EAAEP;AADuB,CAApB,CAAjB;AAIA,MAAMQ,OAAO,GAAG,EAAhB;;AAEA,GAAAV,eAAe,CAACW,EAAhB,CAAmB,SAAnB,KAA8B,UAASC,OAAT,EAAiB;AAAA;;AAC7C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGH,CALD;;AAOApB,QAAQ,CAACqB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst webSocketServerPort = 8080;\nconst webSocketServer = require('websocket').server;\nconst http = require('http');\n\nconst server = http.createServer();\nserver.listen(webSocketServerPort);\nconsole.log('listening on port 8080');\n\nconst wsServer = new webSocketServer({\n  httpServer: server\n});\n\nconst clients = {};\n\nwebSocketServer.on('request', function(request){\n  const [counts, setCounts] = useState([]);\n    useEffect(() => {\n        getCounts();\n    }, []);\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}