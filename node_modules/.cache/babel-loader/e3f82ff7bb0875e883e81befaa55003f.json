{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadja.tur\\\\react-multi-page-website\\\\src\\\\App.js\";\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport CreateUser from './components/CreateUser';\nimport EditUser from './components/EditUser';\nimport ListNumber from './components/ListNumber';\nimport GetNumber from './components/GetNumber';\nimport ActivateNumber from './components/ActivateNumber'; //import { w3cwebsocket as WebSocket } from \"websocket\";\n//import useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport React, { useState, useEffect } from \"react\"; //const URL = 'wss://localhost:44300/';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // Node.js socket client script\n\n  /*const net = require('net');\n   Connect to a server @ port 9898\n  const client = net.createConnection({ port: 9898 }, () => {\n    console.log('CLIENT: I connected to the server.');\n    client.write('CLIENT: Hello this is client!');\n  });\n  client.on('data', (data) => {\n    console.log(data.toString());\n    client.end();\n  });\n  client.on('end', () => {\n    console.log('CLIENT: I disconnected from the server.');\n  });*/\n\n  /*const [ws, setWs] = useState(new WebSocket(URL));\n  \tuseEffect(() => {\n    ws.onopen = () => {\n      alert('WebSocket Connected');\n    }\n     return () => {\n      ws.onclose = () => {\n        alert('WebSocket Disconnected');\n        setWs(new WebSocket(URL));\n      }\n    }\n  }, [ws.onopen, ws.onclose]);*/\n\n  /* if (\"WebSocket\" in window)\n           {\n               alert(\"WebSocket is supported by your Browser!\");\n                // Let us open a web socket\n               var ws = new WebSocket(\"wss://localhost:25003/redomat/react-multi-page-website/api/server.php\");\n                ws.onopen = function()\n               {\n                   // Web Socket is connected, send data using send()\n                   ws.send(\"Message to send\");\n                   alert(\"Message is sent...\");\n               };\n                ws.onmessage = function (evt)\n               {\n                   var received_msg = evt.data;\n                   alert(\"Message is received...\");\n               };\n                ws.onclose = function()\n               {\n                   // websocket is closed.\n                   alert(\"Connection is closed...\");\n               };\n           }\n            else\n           {\n               // The browser doesn't support WebSocket\n               alert(\"WebSocket NOT supported by your Browser!\");\n           }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(ListNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"counts/get\",\n          element: /*#__PURE__*/_jsxDEV(GetNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"counts/activate\",\n          element: /*#__PURE__*/_jsxDEV(ActivateNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"counts/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"counts/:id/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nadja.tur/react-multi-page-website/src/App.js"],"names":["BrowserRouter","Routes","Route","Link","CreateUser","EditUser","ListNumber","GetNumber","ActivateNumber","React","useState","useEffect","App"],"mappings":";AAAA,SAAQA,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAiD,kBAAjD;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B,C,CAEA;AACA;;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;;;AAIA,SAASC,GAAT,GAAe;AAGf;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,6BAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAjFQA,G;AAmFT,eAAeA,GAAf","sourcesContent":["import {BrowserRouter, Routes, Route, Link} from 'react-router-dom';\nimport './App.css';\nimport CreateUser from './components/CreateUser';\nimport EditUser from './components/EditUser';\nimport ListNumber from './components/ListNumber';\nimport GetNumber from './components/GetNumber';\nimport ActivateNumber from './components/ActivateNumber';\n\n//import { w3cwebsocket as WebSocket } from \"websocket\";\n//import useWebSocket, { ReadyState } from 'react-use-websocket';\n\nimport React, { useState, useEffect } from \"react\";\n\n//const URL = 'wss://localhost:44300/';\n\n\n\nfunction App() {\n  \n\n// Node.js socket client script\n/*const net = require('net');\n Connect to a server @ port 9898\nconst client = net.createConnection({ port: 9898 }, () => {\n  console.log('CLIENT: I connected to the server.');\n  client.write('CLIENT: Hello this is client!');\n});\nclient.on('data', (data) => {\n  console.log(data.toString());\n  client.end();\n});\nclient.on('end', () => {\n  console.log('CLIENT: I disconnected from the server.');\n});*/\n\n  \t/*const [ws, setWs] = useState(new WebSocket(URL));\n\n  \tuseEffect(() => {\n\t    ws.onopen = () => {\n\t      alert('WebSocket Connected');\n\t    }\n\n\t    return () => {\n\t      ws.onclose = () => {\n\t        alert('WebSocket Disconnected');\n\t        setWs(new WebSocket(URL));\n\t      }\n\t    }\n  \t}, [ws.onopen, ws.onclose]);*/\n\n   /* if (\"WebSocket\" in window)\n            {\n                alert(\"WebSocket is supported by your Browser!\");\n\n                // Let us open a web socket\n                var ws = new WebSocket(\"wss://localhost:25003/redomat/react-multi-page-website/api/server.php\");\n\n                ws.onopen = function()\n                {\n                    // Web Socket is connected, send data using send()\n                    ws.send(\"Message to send\");\n                    alert(\"Message is sent...\");\n                };\n\n                ws.onmessage = function (evt)\n                {\n                    var received_msg = evt.data;\n                    alert(\"Message is received...\");\n                };\n\n                ws.onclose = function()\n                {\n                    // websocket is closed.\n                    alert(\"Connection is closed...\");\n                };\n            }\n\n            else\n            {\n                // The browser doesn't support WebSocket\n                alert(\"WebSocket NOT supported by your Browser!\");\n            }*/\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n       \n        <Routes>\n          <Route index element={<ListNumber />} />\n          <Route path=\"counts/get\" element={<GetNumber />} />\n          <Route path=\"counts/activate\" element={<ActivateNumber />} />\n          <Route path=\"counts/create\" element={<CreateUser />} />\n          <Route path=\"counts/:id/edit\" element={<EditUser />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}