{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetSubscribers = exports.removeSubscriber = exports.addSubscriber = exports.hasSubscribers = exports.getSubscribers = void 0;\nvar subscribers = {};\nvar EMPTY_LIST = [];\n\nexports.getSubscribers = function (url) {\n  if (exports.hasSubscribers(url)) {\n    return Array.from(subscribers[url]);\n  }\n\n  return EMPTY_LIST;\n};\n\nexports.hasSubscribers = function (url) {\n  var _a;\n\n  return ((_a = subscribers[url]) === null || _a === void 0 ? void 0 : _a.size) > 0;\n};\n\nexports.addSubscriber = function (url, subscriber) {\n  subscribers[url] = subscribers[url] || new Set();\n  subscribers[url].add(subscriber);\n};\n\nexports.removeSubscriber = function (url, subscriber) {\n  subscribers[url].delete(subscriber);\n};\n\nexports.resetSubscribers = function (url) {\n  if (url && subscribers.hasOwnProperty(url)) {\n    delete subscribers[url];\n  } else {\n    for (var url_1 in subscribers) {\n      if (subscribers.hasOwnProperty(url_1)) {\n        delete subscribers[url_1];\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:\\xampp\\htdocs\\redomat\\react-multi-page-website\\node_modules\\react-use-websocket\\src\\lib\\manage-subscribers.ts"],"names":[],"mappings":";;;;;;AAMA,IAAM,WAAW,GAAgB,EAAjC;AACA,IAAM,UAAU,GAAiB,EAAjC;;AAEa,OAAA,CAAA,cAAA,GAAiB,UAAC,GAAD,EAAY;AACtC,MAAI,OAAA,CAAA,cAAA,CAAe,GAAf,CAAJ,EAAyB;AACrB,WAAO,KAAK,CAAC,IAAN,CAAW,WAAW,CAAC,GAAD,CAAtB,CAAP;AACH;;AACD,SAAO,UAAP;AACH,CALY;;AAOA,OAAA,CAAA,cAAA,GAAiB,UAAC,GAAD,EAAY;;;AACtC,SAAO,CAAA,CAAA,EAAA,GAAA,WAAW,CAAC,GAAD,CAAX,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,IAAlB,IAAyB,CAAhC;AACH,CAFY;;AAIA,OAAA,CAAA,aAAA,GAAgB,UAAC,GAAD,EAAc,UAAd,EAAoC;AAC7D,EAAA,WAAW,CAAC,GAAD,CAAX,GAAmB,WAAW,CAAC,GAAD,CAAX,IAAoB,IAAI,GAAJ,EAAvC;AACA,EAAA,WAAW,CAAC,GAAD,CAAX,CAAiB,GAAjB,CAAqB,UAArB;AACH,CAHY;;AAKA,OAAA,CAAA,gBAAA,GAAmB,UAAC,GAAD,EAAc,UAAd,EAAoC;AAChE,EAAA,WAAW,CAAC,GAAD,CAAX,CAAiB,MAAjB,CAAwB,UAAxB;AACH,CAFY;;AAIA,OAAA,CAAA,gBAAA,GAAmB,UAAC,GAAD,EAAa;AACzC,MAAI,GAAG,IAAI,WAAW,CAAC,cAAZ,CAA2B,GAA3B,CAAX,EAA4C;AACxC,WAAO,WAAW,CAAC,GAAD,CAAlB;AACH,GAFD,MAEO;AACH,SAAK,IAAI,KAAT,IAAgB,WAAhB,EAA4B;AACxB,UAAI,WAAW,CAAC,cAAZ,CAA2B,KAA3B,CAAJ,EAAoC;AAChC,eAAO,WAAW,CAAC,KAAD,CAAlB;AACH;AACJ;AACJ;AACJ,CAVY","sourcesContent":["import { Subscriber } from './types';\n\nexport type Subscribers = {\n    [url: string]: Set<Subscriber>,\n}\n  \nconst subscribers: Subscribers = {};\nconst EMPTY_LIST: Subscriber[] = [];\n\nexport const getSubscribers = (url: string): Subscriber[] => {\n    if (hasSubscribers(url)) {\n        return Array.from(subscribers[url]);\n    }\n    return EMPTY_LIST;\n};\n\nexport const hasSubscribers = (url: string): boolean => {\n    return subscribers[url]?.size > 0;\n};\n\nexport const addSubscriber = (url: string, subscriber: Subscriber): void => {\n    subscribers[url] = subscribers[url] || new Set<Subscriber>();\n    subscribers[url].add(subscriber);\n};\n\nexport const removeSubscriber = (url: string, subscriber: Subscriber): void => {\n    subscribers[url].delete(subscriber);\n};\n\nexport const resetSubscribers = (url?: string): void => {\n    if (url && subscribers.hasOwnProperty(url)) {\n        delete subscribers[url];\n    } else {\n        for (let url in subscribers){\n            if (subscribers.hasOwnProperty(url)){\n                delete subscribers[url];\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}